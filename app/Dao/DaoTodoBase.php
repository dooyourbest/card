<?php
/**
 * Created by PhpStorm.
 * User: zhangziang
 * Date: 2018/10/17
 * Time: 上午12:38
 */

namespace App\Dao;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Support\Facades\DB;
class DaoTodoBase extends Model{
    public $objDao;

    const STAGE_AWAIT=0; //等待进行
    const STAGE_RUNNING=1;//进行中
    const STAGE_FINISHED=2;//已完成
    const STAGE_STOP=3;//已停止
    const STAGE_PAUSE=4;//暂停中

    const STATUS_NORMAL=0;
    const STATUS_DEL=1;

    const PID_DEFAULT=0;
    const ISCHANGE_DEFAULT=0;

    public function __construct(array $attributes = []){
        parent::__construct($attributes);
        $this->objDao=DB::table('todo');
    }



    public function addOne($userid,$timestart,$timeend,$title,$note,$use_time,$tag,$status,$stage,$level=0,$pid=0,$is_change=0){
        $ctime=time();
        $mtime=$ctime;
        return $this->objDao->insertGetId(
            [
                'timestart'=>$timestart,
                'timeend'=>$timeend,
                'title'=>$title,
                'note'=>$note,
                'ctime'=>$ctime,
                'mtime'=>$mtime,
                'use_time'=>$use_time,
                'user_id'=>$userid,
                'level'=>$level,
                'status'=>$status,
                'pid'=>$pid,
                'is_changed'=>$is_change,
                'stage'=>$stage,
                'tag'=>$tag,
            ]
        );
    }
    public function update(array $attributes = [], array $options = [])
    {
        return parent::update($attributes, $options); // TODO: Change the autogenerated stub
    }
    public function getTodoByid($id){
       return  $this->objDao->where('id',intval($id))->first();
    }
    public function edit($param){
//        var_dump($param);
        $id=$param['id'];
        unset($param['id']);
        $conf=array(
            "startTime"=>'timestart',
            "endTime"=>'timeend',
            "useTime"=>'use_time',
        );
        $confkeys=array_keys($conf);
        foreach ($param as $key=>$val){
            if(in_array($key,$confkeys)){
                $param[$conf[$key]]=$val;
                unset($param[$key]);
            }
        }
        return $this->objDao->where('id',$id)->update($param);
    }
    public function getList($userid){
        return $this->objDao->where('user_id','=',$userid)->where("status",self::STATUS_NORMAL)->get();
    }
    function changeParam(){
        $list=["startTime","endTime","title","note","level","tag","useTime",'id'];

    }

    function getTodoByTime($start, $end){
        $res= $this->objDao->whereBetween('ctime', [$start, $end])->where("status",self::STATUS_NORMAL)->orderBy('level', 'asc')->get();
        return $res;
    }

    function deltodo($id){
        $arr=array("status"=>self::STATUS_DEL);
        return $this->objDao->where('id',$id)->update($arr);
    }
}